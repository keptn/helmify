apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "operator.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace | quote }}
  labels:
  {{- include "operator.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "operator.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace | quote }}
  labels:
    control-plane: controller-manager
  {{- include "operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "operator.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag
          | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources: {}
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: VAR1
          valueFrom:
            secretKeyRef:
              key: VAR1
              name: {{ include "operator.fullname" . }}-secret-vars
        - name: VAR2
          value: {{ .Values.controllerManager.manager.env.var2 }}
        - name: VAR3_MY_ENV
          value: {{ .Values.controllerManager.manager.env.var3MyEnv }}
        - name: VAR4
          valueFrom:
            configMapKeyRef:
              key: VAR4
              name: {{ include "operator.fullname" . }}-configmap-vars
        - name: VAR5
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: VAR6
          valueFrom:
            resourceFieldRef:
              divisor: "0"
              resource: limits.cpu
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        name: manager
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.controllerManager.manager.containerSecurityContext.allowPrivilegeEscalation
            }}
          capabilities: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.manager.containerSecurityContext.capabilities
            "context" $) | nindent 12 }}
          privileged: {{ .Values.controllerManager.manager.containerSecurityContext.privileged
            }}
          readOnlyRootFilesystem: {{ .Values.controllerManager.manager.containerSecurityContext.readOnlyRootFilesystem
            }}
          runAsNonRoot: {{ .Values.controllerManager.manager.containerSecurityContext.runAsNonRoot
            }}
          runAsUser: {{ .Values.controllerManager.manager.containerSecurityContext.runAsUser
            }}
          seccompProfile: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.manager.containerSecurityContext.seccompProfile
            "context" $) | nindent 12 }}
        volumeMounts:
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
        - mountPath: /my.ca
          name: secret-volume
        {{- if .Values.controllerManager.manager.livenessProbe }}
        livenessProbe: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.manager.livenessProbe "context" $) | nindent 10 }}
         {{- else }}
        livenessProbe:
         httpGet:
           path: /healthz
           port: 8081
         initialDelaySeconds: 15
         periodSeconds: 20
        {{- end }}
        {{- if .Values.controllerManager.manager.readinessProbe }}
        readinessProbe: {{- include "tplvalues.render" (dict "value" .Values.controllerManager.manager.readinessProbe "context" $) | nindent 10 }}
         {{- else }}
        readinessProbe:
         httpGet:
           path: /readyz
           port: 8081
         initialDelaySeconds: 5
         periodSeconds: 10
        {{- end }}
      imagePullSecrets:
      - name: {{ include "operator.fullname" . }}-secret-registry-credentials
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "operator.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: {{ include "operator.fullname" . }}-manager-config
        name: manager-config
      - name: secret-volume
        secret:
          secretName: {{ include "operator.fullname" . }}-secret-ca
{{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector: {{- include "tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations: {{- include "tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
{{- end }}
